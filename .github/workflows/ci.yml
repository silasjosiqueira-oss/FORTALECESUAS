name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Instalar dependências
      run: npm ci

    - name: Executar ESLint
      run: npm run lint --if-present
      continue-on-error: true

  test:
    name: Testes Unitários
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Instalar dependências
      run: npm ci

    - name: Executar testes
      run: npm test --if-present
      env:
        DB_HOST: localhost
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: test_db
        JWT_SECRET: test_secret_key_for_ci
        JWT_REFRESH_SECRET: test_refresh_secret_key_for_ci
        NODE_ENV: test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login no Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      if: github.event_name == 'push'

    - name: Build e Push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name == 'push' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/fortalecesuas:latest
          ${{ secrets.DOCKER_USERNAME }}/fortalecesuas:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    name: Análise de Segurança
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Instalar dependências
      run: npm ci

    - name: Audit de Segurança
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
