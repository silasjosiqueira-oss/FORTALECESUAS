#!/bin/bash

# ======================================
# FORTALECESUAS - Script de Deploy
# ======================================

set -e

echo "üöÄ Iniciando deploy do FORTALECESUAS..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fun√ß√£o para verificar se comando existe
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Verificar depend√™ncias
echo "üìã Verificando depend√™ncias..."

if ! command_exists docker; then
    echo -e "${RED}‚ùå Docker n√£o est√° instalado!${NC}"
    exit 1
fi

if ! command_exists docker-compose; then
    echo -e "${RED}‚ùå Docker Compose n√£o est√° instalado!${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Depend√™ncias verificadas${NC}"

# Verificar arquivo .env
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo .env n√£o encontrado!${NC}"
    echo "Copiando .env.docker como template..."
    cp .env.docker .env
    echo -e "${RED}‚ùå Configure o arquivo .env antes de continuar!${NC}"
    exit 1
fi

# Verificar se as secrets foram alteradas
if grep -q "ALTERAR" .env; then
    echo -e "${RED}‚ùå Voc√™ precisa alterar as secrets no arquivo .env!${NC}"
    echo "Procure por 'ALTERAR' no arquivo .env e substitua pelos valores reais."
    exit 1
fi

echo -e "${GREEN}‚úÖ Arquivo .env configurado${NC}"

# Backup do banco de dados (se existir)
if [ "$(docker ps -q -f name=fortalecesuas-mysql)" ]; then
    echo "üíæ Fazendo backup do banco de dados..."
    mkdir -p backups
    docker exec fortalecesuas-mysql mysqldump -u root -p"${DB_ROOT_PASSWORD}" sistema_assistencia > "backups/backup_$(date +%Y%m%d_%H%M%S).sql"
    echo -e "${GREEN}‚úÖ Backup criado${NC}"
fi

# Parar containers antigos
echo "üõë Parando containers..."
docker-compose down

# Limpar volumes √≥rf√£os (cuidado!)
# docker-compose down -v

# Build da imagem
echo "üî® Construindo imagem Docker..."
docker-compose build --no-cache

# Iniciar servi√ßos
echo "üöÄ Iniciando servi√ßos..."
docker-compose up -d

# Aguardar servi√ßos ficarem saud√°veis
echo "‚è≥ Aguardando servi√ßos iniciarem..."
sleep 10

# Verificar status
echo "üîç Verificando status dos servi√ßos..."
docker-compose ps

# Verificar logs
echo ""
echo "üìã √öltimas linhas do log:"
docker-compose logs --tail=20 app

# Verificar health
echo ""
echo "üè• Verificando health check..."
sleep 5

if curl -f http://localhost:3000/health >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Aplica√ß√£o est√° saud√°vel!${NC}"
else
    echo -e "${RED}‚ùå Aplica√ß√£o n√£o est√° respondendo!${NC}"
    echo "Verifique os logs com: docker-compose logs app"
    exit 1
fi

echo ""
echo -e "${GREEN}‚úÖ Deploy conclu√≠do com sucesso!${NC}"
echo ""
echo "üìä URLs de acesso:"
echo "   - Aplica√ß√£o: http://localhost:3000"
echo "   - Health: http://localhost:3000/health"
echo ""
echo "üìã Comandos √∫teis:"
echo "   - Ver logs: docker-compose logs -f app"
echo "   - Parar: docker-compose down"
echo "   - Reiniciar: docker-compose restart"
echo "   - Status: docker-compose ps"
echo ""
echo "‚ö†Ô∏è  Credenciais padr√£o (ALTERE IMEDIATAMENTE):"
echo "   - Usu√°rio: admin"
echo "   - Senha: admin123"
